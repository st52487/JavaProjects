package gui;

import automobily.Adapter;
import automobily.BarvaAuta;
import automobily.TypAutomobilu;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.input.KeyEvent;
import javafx.scene.layout.ColumnConstraints;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.Pane;
import javafx.scene.layout.RowConstraints;
import javafx.scene.text.Font;
import javafx.stage.Stage;
import kolekce.KolekceException;

public class DialogNovy {

    private ComboBox<String> comboBox;
    private ComboBox<String> barva;
    private GridPane grid;
    private Label a, b, c, d;
    private TextField txtA, txtC, txtD;
    private Button btnOk;
    private Stage stage;
    private Pane pane;
    private Label vyber;
    private Scene scena;
    private Adapter adapter;

    private ObservableList<String> list1
            = FXCollections.observableArrayList("Osobní auto",
                    "Dodávka", "Nákladní auto");
    private ObservableList<String> list2
            = FXCollections.observableArrayList("BÍLA", "ČERVENÁ", "ČERNÁ", "MODRÁ",
                    "ZELENÁ", "RŮŽOVÁ", "FIALOVÁ", "ŽLUTÁ", "ORANŽOVÁ");

    public DialogNovy(Adapter adapter) {
        this.adapter = adapter;
        vytvorDialog();

    }

    private void vytvorDialog() {

        stage = new Stage();

        pane = new Pane();

        a = new Label("Počet kol: ");
        b = new Label("Barva: ");
        c = new Label();
        d = new Label();

        txtA = new TextField();
        txtC = new TextField();
        txtD = new TextField();

        grid = new GridPane();

        btnOk = new Button();

        barva = new ComboBox();
        comboBox = new ComboBox();

        vyber = new Label("Vyber typ: ");
        vyber.setFont(new Font("Arial", 16));

        comboBox.setItems(list1);
        comboBox.getSelectionModel().selectFirst();

        barva.setItems(list2);
        barva.getSelectionModel().selectFirst();

        grid.setPadding(new javafx.geometry.Insets(20, 10, 10, 20));

        txtA.setText("4");

        grid.setConstraints(a, 1, 1);
        grid.getChildren().add(a);

        grid.setConstraints(b, 1, 2);
        grid.getChildren().add(b);

        grid.setConstraints(txtA, 2, 1);
        grid.getChildren().add(txtA);
        grid.setConstraints(barva, 2, 2);
        grid.getChildren().add(barva);

        grid.setConstraints(c, 1, 3);
        grid.getChildren().add(c);
        grid.setConstraints(d, 1, 4);
        grid.getChildren().add(d);

        grid.setConstraints(txtC, 2, 3);
        grid.getChildren().add(txtC);
        grid.setConstraints(txtD, 2, 4);
        grid.getChildren().add(txtD);

        btnOk.setText("OK");
        grid.setConstraints(btnOk, 2, 5);
        grid.getChildren().add(btnOk);

        grid.getColumnConstraints().add(new ColumnConstraints(100));
        grid.getColumnConstraints().add(new ColumnConstraints(140));
        grid.getColumnConstraints().add(new ColumnConstraints(140));
        grid.getRowConstraints().add(new RowConstraints(40)); 
        grid.getRowConstraints().add(new RowConstraints(40));
        grid.getRowConstraints().add(new RowConstraints(40));
        grid.getRowConstraints().add(new RowConstraints(40));
        grid.getRowConstraints().add(new RowConstraints(40)); 
        grid.getRowConstraints().add(new RowConstraints(40)); 
    

        comboBox.setOnAction((ActionEvent event) -> {
            vytvor();
        });

        grid.setConstraints(vyber, 0, 0);
        grid.setConstraints(comboBox, 1, 0);
        grid.getChildren().add(vyber);
        grid.getChildren().add(comboBox);

        vytvor();

        btnOk.setDisable(false);

       
        btnOk.setOnAction((event) -> {
            if (comboBox.getSelectionModel().getSelectedItem().equals(list1.get(0))) {
                try {
                    adapter.clickPridejOsobni(TypAutomobilu.OSOBNI, Integer.parseInt(txtA.getText()), BarvaAuta.valueOf(barva.getSelectionModel().getSelectedItem()), txtC.getText(), txtD.getText());
                } catch (KolekceException ex) {
                    alert().showAndWait();
                }
            } else if (comboBox.getSelectionModel().getSelectedItem().equals(list1.get(1))) {
                try {
                    adapter.clickPridejDodavka(TypAutomobilu.DODAVKA, Integer.parseInt(txtA.getText()), BarvaAuta.valueOf(barva.getSelectionModel().getSelectedItem()), Integer.parseInt(txtC.getText()), txtD.getText());
                } catch (KolekceException ex) {
                    alert().showAndWait();
                }
            } else if (comboBox.getSelectionModel().getSelectedItem().equals(list1.get(2))) {
                try {
                    adapter.clickPridejNakladni(TypAutomobilu.NAKLADNI, Integer.parseInt(txtA.getText()), BarvaAuta.valueOf(barva.getSelectionModel().getSelectedItem()), Integer.parseInt(txtC.getText()), txtD.getText());
                } catch (KolekceException ex) {
                    alert().showAndWait();
                }
            }
            stage.close();
        });

        pane.getChildren().add(grid);
        stage.setTitle("Nový automobil");
        scena = new Scene(pane, 420, 255);
        stage.setResizable(false);
        stage.setScene(scena);
        stage.showAndWait();

    }
    
     private Alert alert(){
        Alert alert = new Alert(Alert.AlertType.ERROR);
        alert.setTitle("Chyba");
        return alert;
    }


    public ComboBox<String> getBarva() {
        return barva;
    }

    public ComboBox<String> getComboBox() throws KolekceException {
        return comboBox;
    }

    public String getTxtA() {
        return txtA.getText();
    }

    public String getTxtC() {
        return txtC.getText();
    }

    public String getTxtD() {
        return txtD.getText();
    }

//
//    private void vseVyplneno(KeyEvent event) {
//        if (txtA.length() != 0 && tfCena.getText().length() != 0) {
//            btPridejKnihu.setDisable(false);
//        } else {
//            btPridejKnihu.setDisable(true);
//        }
//    }
//    private boolean zadaneUdaje() {
//        if (txtA.getText() == null || txtA.getText().length() == 0
//                || txtC.getText() == null || txtC.getText().length() == 00
//                || txtD.getText() == null || txtD.getText().length() == 00) {
//            return false;
//        }
//        return true;
//    }

    private void vytvor() {
        try {
            if (comboBox.getSelectionModel().getSelectedItem().equals("Osobní auto")) {
                c.setText("Značka:");
                d.setText("Funkční: ");
                txtC.setText("6S5 487");
                txtD.setText("ano");
            } else if (comboBox.getSelectionModel().getSelectedItem().equals("Dodávka")) {
                c.setText("Hmotnost:");
                d.setText("Typ motoru:");
                txtC.setText("450");
                txtD.setText("turbo");
            } else if (comboBox.getSelectionModel().getSelectedItem().equals("Nákladní auto")) {
                c.setText("Počet koní:");
                d.setText("Náhon na všechny:");
                txtC.setText("100");
                txtD.setText("ano");
            }
        } catch (Exception e) {
            alert().showAndWait();
        }

    }

}
